% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quantgen.R
\name{gibbsJanss2012}
\alias{gibbsJanss2012}
\title{Gibbs sampler from Janss et al (2012)}
\usage{
gibbsJanss2012(y, a = NULL, b = NULL, family = "gaussian", K, XF = NULL,
  df0 = 0, S0 = 0, nIter = 110, burnIn = 10, thin = 10,
  saveAt = NULL, weights = NULL, verbose = 0)
}
\arguments{
\item{y}{vector of responses of length n}

\item{a}{used when y is censored}

\item{b}{used when y is censored}

\item{family}{"gaussian" or "bernoulli"}

\item{K}{list of lists (one per prior)}

\item{XF}{n x pF incidence matrix for fixed effects}

\item{df0}{degrees of freedom for the prior variances}

\item{S0}{scale for the prior variances}

\item{nIter}{number of iterations}

\item{burnIn}{burn-in}

\item{thin}{thinning}

\item{saveAt}{if not NULL, results will be saved in this file}

\item{weights}{optional vector}

\item{verbose}{verbosity level (0/1/2)}
}
\value{
list
}
\description{
Run the Gibbs sampler from Janss et al (2012).
}
\note{
To reduce dependency, the R version of the "rtrun" function from the "bayesm" package (version 2.2-5 implemented by Peter Rossi and available under the GPL) was copied. Moreover, because the Janss supplement lacked a function, the "dtruncnorm" function from the "truncnorm" package was adapted.
}
\examples{
\dontrun{## load the wheat data set
c("X","Y") \%in\% ls()
library(BLR)
data(wheat)
c("X","Y") \%in\% ls()
dim(X) # lines x markers
W <- scale(X, center=TRUE, scale=TRUE)
G <- tcrossprod(W) / ncol(W)
EVD <- eigen(G)
plot(EVD$vectors[,2], EVD$vectors[,1], main="Same as figure 3 left",
     xlab="Eigenvector 2", ylab="Eigenvector 1", pch=18)
plot(x=0:nrow(X), y=c(0, cumsum(EVD$values) / nrow(X)), type="l", las=1,
     main="Same as figure 4 left", ylab="", xlab="Number of eigenvalues")
abline(h=1, a=0, b=1/nrow(X), lty=2)
fit <- gibbsJanss2012(y=Y[,1], K=list(list(V=EVD$vectors, d=EVD$values,
                                           df0=5, S0=3/2)),
                      nIter=20000, burnIn=2000)
fit$mu # ~= 0
fit$varE # ~= 0.54
fit$K[[1]]$varU # ~= 0.52
fit$K[[1]]$varU / (fit$K[[1]]$varU + fit$varE) # ~= 0.49 (same as in paper)
}
}
\author{
Luc Janss [aut], Gustavo de los Campos [aut], Timothee Flutre [ctb]
}
